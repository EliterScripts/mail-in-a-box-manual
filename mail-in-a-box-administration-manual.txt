Mail-In-A-Box Administration Manual

License

This manual is licensed under the Creative Commons Zero v1.0 Universal license. Any contributions to the repository will be under this license.

Here is the license:

CC0 1.0 Universal

Statement of Purpose

The laws of most jurisdictions throughout the world automatically confer

exclusive Copyright and Related Rights (defined below) upon the creator and

subsequent owner(s) (each and all, an "owner") of an original work of

authorship and/or a database (each, a "Work").

Certain owners wish to permanently relinquish those rights to a Work for the

purpose of contributing to a commons of creative, cultural and scientific

works ("Commons") that the public can reliably and without fear of later

claims of infringement build upon, modify, incorporate in other works, reuse

and redistribute as freely as possible in any form whatsoever and for any

purposes, including without limitation commercial purposes. These owners may

contribute to the Commons to promote the ideal of a free culture and the

further production of creative, cultural and scientific works, or to gain

reputation or greater distribution for their Work in part through the use and

efforts of others.

For these and/or other purposes and motivations, and without any expectation

of additional consideration or compensation, the person associating CC0 with a

Work (the "Affirmer"), to the extent that he or she is an owner of Copyright

and Related Rights in the Work, voluntarily elects to apply CC0 to the Work

and publicly distribute the Work under its terms, with knowledge of his or her

Copyright and Related Rights in the Work and the meaning and intended legal

effect of CC0 on those rights.

1. Copyright and Related Rights. A Work made available under CC0 may be

protected by copyright and related or neighboring rights ("Copyright and

Related Rights"). Copyright and Related Rights include, but are not limited

to, the following:

 i. the right to reproduce, adapt, distribute, perform, display, communicate,

 and translate a Work;

 ii. moral rights retained by the original author(s) and/or performer(s);

 iii. publicity and privacy rights pertaining to a person's image or likeness

 depicted in a Work;

 iv. rights protecting against unfair competition in regards to a Work,

 subject to the limitations in paragraph 4(a), below;

 v. rights protecting the extraction, dissemination, use and reuse of data in

 a Work;

 vi. database rights (such as those arising under Directive 96/9/EC of the

 European Parliament and of the Council of 11 March 1996 on the legal

 protection of databases, and under any national implementation thereof,

 including any amended or successor version of such directive); and

 vii. other similar, equivalent or corresponding rights throughout the world

 based on applicable law or treaty, and any national implementations thereof.

2. Waiver. To the greatest extent permitted by, but not in contravention of,

applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and

unconditionally waives, abandons, and surrenders all of Affirmer's Copyright

and Related Rights and associated claims and causes of action, whether now

known or unknown (including existing as well as future claims and causes of

action), in the Work (i) in all territories worldwide, (ii) for the maximum

duration provided by applicable law or treaty (including future time

extensions), (iii) in any current or future medium and for any number of

copies, and (iv) for any purpose whatsoever, including without limitation

commercial, advertising or promotional purposes (the "Waiver"). Affirmer makes

the Waiver for the benefit of each member of the public at large and to the

detriment of Affirmer's heirs and successors, fully intending that such Waiver

shall not be subject to revocation, rescission, cancellation, termination, or

any other legal or equitable action to disrupt the quiet enjoyment of the Work

by the public as contemplated by Affirmer's express Statement of Purpose.

3. Public License Fallback. Should any part of the Waiver for any reason be

judged legally invalid or ineffective under applicable law, then the Waiver

shall be preserved to the maximum extent permitted taking into account

Affirmer's express Statement of Purpose. In addition, to the extent the Waiver

is so judged Affirmer hereby grants to each affected person a royalty-free,

non transferable, non sublicensable, non exclusive, irrevocable and

unconditional license to exercise Affirmer's Copyright and Related Rights in

the Work (i) in all territories worldwide, (ii) for the maximum duration

provided by applicable law or treaty (including future time extensions), (iii)

in any current or future medium and for any number of copies, and (iv) for any

purpose whatsoever, including without limitation commercial, advertising or

promotional purposes (the "License"). The License shall be deemed effective as

of the date CC0 was applied by Affirmer to the Work. Should any part of the

License for any reason be judged legally invalid or ineffective under

applicable law, such partial invalidity or ineffectiveness shall not

invalidate the remainder of the License, and in such case Affirmer hereby

affirms that he or she will not (i) exercise any of his or her remaining

Copyright and Related Rights in the Work or (ii) assert any associated claims

and causes of action with respect to the Work, in either case contrary to

Affirmer's express Statement of Purpose.

4. Limitations and Disclaimers.

 a. No trademark or patent rights held by Affirmer are waived, abandoned,

 surrendered, licensed or otherwise affected by this document.

 b. Affirmer offers the Work as-is and makes no representations or warranties

 of any kind concerning the Work, express, implied, statutory or otherwise,

 including without limitation warranties of title, merchantability, fitness

 for a particular purpose, non infringement, or the absence of latent or

 other defects, accuracy, or the present or absence of errors, whether or not

 discoverable, all to the greatest extent permissible under applicable law.

 c. Affirmer disclaims responsibility for clearing rights of other persons

 that may apply to the Work or any use thereof, including without limitation

 any person's Copyright and Related Rights in the Work. Further, Affirmer

 disclaims responsibility for obtaining any necessary consents, permissions

 or other rights required for any use of the Work.

 d. Affirmer understands and acknowledges that Creative Commons is not a

 party to this document and has no duty or obligation with respect to this

 CC0 or use of the Work.

For more information, please see

<http://creativecommons.org/publicdomain/zero/1.0/>About This Manual



Why?

The idea for this manual came about in conversation with @Eliter over on the Discourse Forums. Having an in-depth administration manual will help new-comers and maybe even veterans to Linux / MIAB to be able to setup and maintain their own mail server!

A lot of this manual was taken from mailinabox.email, and is used in accordance the the website license.

Attribution: https://mailinabox.email

What is Mail-In-A-Box?



About Mail-In-A-Box

Mail-in-a-Box lets you become your own mail service provider in a few easy steps. It’s sort of like making your own Gmail, but one you control from top to bottom.

Technically, Mail-in-a-Box turns a fresh cloud computer into a working mail server. But you don’t need to be a technology expert to set it up.

Development

Mail-in-a-Box is based on Ubuntu 18.04 LTS 64-bit and uses very-well-documented shell scripts and a Python management daemon to configure the system. Take a look at the system architecture diagram and security practices.

Development takes place on github at https://github.com/mail-in-a-box/mailinabox.

Note that the goals of this project are to . . .

Make deploying a good mail server easy.

Promote decentralization, innovation, and privacy on the web.

Have automated, auditable, and idempotent system configuration.

Not make a totally unhackable, NSA-proof server (but see our security practices).

Not make something customizable by power users.

Additionally, this project has a Code of Conduct, which supersedes the goals above. Please review it when joining our community.

Mail-in-a-Box is dedicated to the public domain using CC0.

Joshua Tauberer (@JoshData) began this project in 2013 and is the primary maintainer. Thank you to all of the contributors!Why Build Mail-In-A-Box?

Mass electronic surveillance by governments revealed over the last several years has spurred a new movement to re-decentralize the web, a movement to empower individuals to be their own service providers again.

Although the core protocol of email, SMTP, is inherently decentralized, in practice email has become highly centralized because it is so damn difficult to implement the dozens of modern protocols that surround it. Mail-in-a-Box takes care of all of that, and no more.

This is important not just for privacy, but for the ability for the web to evolve and improve as it always has: through the ability of everyone to see how it works, tinker, and propose innovative changes.Special Acknowledgements

This project was inspired in part by the "NSA-proof your email in 2 hours" blog post by Drew Crawford, Sovereign by Alex Payne, and conversations with @shevski, @konklone, and @GregElin.

Mail-in-a-Box is similar to iRedMail and Modoboa.

Mail-in-a-Box is based on Postfix, Dovecot, Z-Push, Roundcube, Nextcloud, Apache SpamAssassin, Postgrey, Nginx, @konklone’s nginx config, and more.Mail-In-A-Box System Requirements

The following are a recommended minimum on system requirements.

25GB storage space or more

1GB available RAM

Ubuntu 18.04 (18.04.1 is also compatible) *Note: MIAB will only install on 18.04, NOT 18.10.

We recommend at least a dual core CPU, however it has been known to run on a single core.

You will also need the ability to set a PTR or rDNS record with your ISP. This varies from company to company.

The ability to send and receive on port 25. Some home ISP's will block this, but they might also allow it if you request it. Call them to find out.

Is Mail-In-A-Box right for me?



TBD

Finding a Hosing Provider & Setting Up a Domain



What is Hosting and a Domain?

What is a Server? Why do I need one?

MIAB requires a server to run. A server is a computer specially designed to run server applications, typically to be powered on all day, all month, all year, non-stop. However, when we say "server" in a hardware context, it does not necessarily have to be server-grade hardware, it can be any computer.

While you can run MIAB on your computer at home, there are some considerations you should take, as that may not be the best option for you. See the (WIP) section for more detail on choosing a hosting provider.

There is a business model, where companies host your servers for you, for a minutely, hourly, or monthly cost, depending on your provider. These companies put servers, on shelves, in aisles, in data centers (which are warehouses designed for servers). Of course, they provide power and Internet to your servers too. They also keep the building, server hardware, electricity and network maintained, with many backups and security measures in place to make sure that your server experiences the lowest possible downtime.

What is a Domain? Why do I need one?

In a computer network, every computer is assigned an IP address to communicate. These IP addresses look like the following: 8.8.8.8 (for an IPv4 address) and 2001:4860:4860::8888 (for an IPv6 address). Since those addresses are difficult to remember, DNS, or Domain Name System, is a system that converts words such as google.com (which is a domain) into an IP address.

Although you can technically setup a mail server without a domain, it will: make it difficult for users to remember your IP address, puts you in a position where you could be locked into a hosting provider, and MIAB is't really designed to work without a domain (or Fully Qualified Domain Name, FQDN, it might sometimes be called).

To get a domain, you must get it from a domain registrar.Installing & Preparing Ubuntu for Mail-In-A-Box



Installing Ubuntu 18.04

If you are using a VPS (Virtual Private Server) in the cloud, like Digital Ocean, OpenVZ, Nocix, Scaleway, etc then you do not need to follow this page. Please continue to the "Setting up Ubuntu 18.04 and Preparing for Mail-In-A-Box" page instead.

Before we do anything, we will need to download Ubuntu Server 18.04. Please do not use the Desktop version. It has packages that are not compatible with MIAB.

Here is a link to download Ubuntu Server 18.04 AMD64 Version

If you need arm64 version, please refer to the CDIMAGE server which has different architectures for different servers.

Once the download is completed, you will need to either burn the ISO to a DVD or USB stick. If you are using a Hypervisor to make a virtual machine (Xen, VMWare, VirtualBox, or Hyper-V to name a few) then you can continue without burning to a DVD or USB stick.

Lets boot up to the DVD, USB, or ISO and you will see a startup prompt. Select your preferred language and follow the on screen prompts. If this machine is not in the DMZ on your router or firewall please make sure to set the IP during the network setup as manual or static. This will allow you to port forward much easier later. Also make sure to select all drive space when prompted for partitions. The more space, the more emails and cloud hosting you can do.

During the installation you will be asked if you want to setup extra software. DO NOT SELECT ANYTHING and just continue. All software we need will be installed later. We do not want ubuntu automatically configuring anything that can conflict with MIAB.

Once the install is completed, remove any installation media and reboot the server. The next page will explain basic preparations and setup of ubuntu for MIAB.

Setting up Ubuntu 18.04 and Preparing for Mail-In-A-Box

In this part of the manual we will be setting up Ubuntu with SSH, secure passwords, networking (if not done during the install), and other stuff required for MIAB.

Configuring SSH

First thing we will need to do is install SSH, so let's get that out of the way right now.

sudo apt install openssh-server

After the installation is completed, please confirm you can connect by using PuTTY or some other SSH client to connect to the server.

Next, let's setup a public key authentication. If you are on Linux:

ssh-keygen

If you are on Windows, download and run puttygen (or install the PuTTY suite onto your computer.)

Go ahead and open puttygen and generate a new private / public key pair. You can password protect (recommended) this key pair for better security.

Press the "Generate" button in the application, follow the instructions and then fill out the form when it is done generating.

Give it a key comment, a password if desired (again, recommended!), and then select "Save public key" AND "Save private key".

If you plan on using the private key to authenticate on more than just your Windows machine, you can select "Conversions -> Export OpenSSH Key" from the menu bar. However if only on Windows, Saving the private key is enough.

On your server, do:

nano ~/.ssh/authorized_keys

And add the "Public key for pasting into OpenSSH authorized_keys file" and then press CTRL+X, then Y, then enter.

(Picture for reference)

Once the authorized_keys file is saved, we need to edit one more file:

sudo nano /etc/ssh/sshd_config

And modify the following line(s):

...

PasswordAuthentication no

PubkeyAuthentication yes

AuthorizedKeysFile .ssh/authorized_keys

...

Save the file, and restart SSH:

sudo systemctl restart ssh

Once that is done, try to authenticate with the SSH private key, not your password. In Linux this is as simple as just referencing the new key in the SSH command line:

ssh -i ~/path/to/key username@ip_of_machine

In Windows, you will need to use PuTTY and then configure putty to use the private key:

If the connection was successful, then we can move on to the next step. However, if you have any issues, you will need to consult Google as troubleshooting Ubuntu issues is outside the scope of this Manual. (However, make sure you are using the right private key, password, and user. If anything else, in the open SSH session you should still have open, check the syslogs for any errors as well.)Installing Mail-In-A-Box



Installing Mail-In-A-Box

Before continuing, please make sure you followed the "Setting up Ubuntu 18.04 and Preparing for Mail-In-A-Box" page. There are some recommended steps to make the below go smoothly.

Warning! By installing Mail-In-A-Box, you agree to the Let’s Encrypt Subscriber Agreement(s) & Terms of Services.

Once inside, you will now get the Mail-in-a-Box code onto your box and start its setup. Copy and paste this into your terminal and hit enter:

curl -s https://mailinabox.email/setup.sh | sudo -E bash

Advanced: To change the default location where Mail-in-a-Box stores all of its data, you can set an environment variable named 'STORAGE_ROOT' before running the setup script. export STORAGE_ROOT=/your/desired/path

You will be asked to enter the email address you want and a few other configuration questions. At the end you will be asked for a password for your email address.

This password will be used to login to webmail, the administrative interface, and on your devices. It will not be used to log onto your Mail-in-a-Box server using SSH.

It is always safe to re-run the setup, either because something went wrong or you just want to see it again. You can do so by following two the steps above again or just running sudo mailinabox from the command line.

If the installation was successful, you should see:

Your Mail-in-a-Box is running.

Please log in to the control panel for further instructions at:

 https://ip_of_your_box/admin

You will be alerted that the website has an invalid certificate. Check that

the certificate fingerprint matches:

TLS / SSL Certificates

Go ahead and login to the admin panel. The first thing we should do now is get SSL certificates on this server. Head over to the TLS Certificates page of the admin panel and press "Provision" on the box.domain.tld you selected during install. This will take a few moments, so be patient and follow on-screen instructions. If you do not want to use Let's Encrypt (Though it is recommended that you do) you can manually import TLS/SSL certificates via this page as well.

Setting Up Your First Domain

Updating & Maintaining Mail-In-A-Box



Troubleshooting & Diagnosing Issues with Ubuntu & Mail-In-A-Box



Getting Help

If you need help, please check the maintenance guide and then ask on the forum. If you think you have found a problem in Mail-in-a-Box or don’t get a response on the forum, then open an issue on github.

We will post announcements and security advisories to our twitter account @mailinabox, the announcements section of the discussion forum, and our Slack chat (see above).

Do not tweet questions: Always start on the forum so others can benefit from seeing your question too.

Reporting spam/fraud/abuse: Mail-in-a-Box actually isn’t a mail service at all. It is more like a cooking recipe for how to create a mail service — therefore, we have no way to know who is following the recipe and have no control over people baking our cake to hide a poison. Like cake, there are many recipes for creating email servers besides Mail-in-a-Box (Microsoft Exchange Server being one of the most popular), and we are just unlucky when sometimes someone with bad intentions choses ours. In other words, we don’t control how people use Mail-in-a-Box and have no technical or legal means to disable other people’s services. You may want to check out the Mail-in-a-Box discussion forum and coordinate with anyone that has reported a similar situation recently.